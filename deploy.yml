apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs-shop
  labels:
    app: nodejs-shop
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nodejs-shop
  template:
    metadata:
      name: nodejs-shop
      labels:
        app: nodejs-shop
    spec:
      containers:
      - image: omrmtn/nodejs-shop
        name: nodejs-shop
        ports:
          - containerPort: 80
            protocol: TCP
        env:
          - name: MONGO_USER
            value: omrmtn
          - name: MONGO_PASSWORD
            value: 5oczxeSFOMzZQH7o
          - name: MONGO_DEFAULT_DATABASE
            value: shop
          - name: STRIPE_KEY
            value: sk_test_CqtJsRu3yLTPqAqylvQqjawd0040zg0ePy
---
# Node Port Service
apiVersion: v1
kind: Service
metadata:
  name: nodejs-shop
  labels:
    app: nodejs-shop
spec:
  type: NodePort
  ports:
    - port: 8085
      targetPort: 8085
  selector:
    name: nodejs-shop
---
# Mongo host path rc
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    app: mongo
  name: mongo-controller
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - image: omrmtn/mongo
        name: mongo
        ports:
        - name: mongo
          containerPort: 27017
          hostPort: 27017
        volumeMounts:
        - name: mongo-persistent-storage
          mountPath: /data/db
      volumes:
      - name: mongo-persistent-storage
        hostPath:
         path: /tmp/dbbackup
---
# Mongo Node Port RC
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mongo
  name: mongo
spec:
  type: ClusterIP
  ports:
    - port: 27017
      targetPort: 27017
  selector:
    matchLabels:
      app: mongo